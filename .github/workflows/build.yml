name: Build Docker Image

on:
  push:
    branches:
      - master
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: moderras/comtradetool

jobs:
  build:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    env:
      TZ: Asia/Shanghai
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Unit Test
        run: |
          python -m unittest diagram_test
      - name: Delete Test Files
        run: |
          rm -rf testdata

      - name: Get and Format Time
        run: |
          rm -f build_time.py
          current_time=$(date +"%Y-%m-%d %H:%M:%S")
          echo "from datetime import datetime" > build_time.py
          echo "build_time = datetime.strptime('$current_time', '%Y-%m-%d %H:%M:%S')" >> build_time.py
          echo "formatted_time = build_time.strftime('%Y-%m-%d %H:%M:%S')" >> build_time.py


      - name: Build and push Docker image cpython
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Build and push Docker image pypy
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: Dockerfile.pypy
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}-pypy
          labels: ${{ steps.meta.outputs.labels }}